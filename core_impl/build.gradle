plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions "version"

    productFlavors {
        googlePlay {
            dimension "version"
        }

        uiTest {
            minSdkVersion 29
        }
    }

    variantFilter { variant ->
        def names = variant.flavors*.name

        if (names.contains("uiTest") && variant.buildType.name == "release") {
            variant.ignore = true
        }
    }
}

apply from: "$project.rootDir/scripts/deps_versions.gradle"

dependencies {

    androidTestImplementation 'junit:junit:4.12'
    coreLibraryDesugaring desugaring
    implementation androidCore
    implementation multidex
    implementation fragment
    implementation material
    implementation constraintLayout
    implementation coroutineDependencies.values()
    implementation navigationDependencies.values()
    implementation recycler
    implementation ktor.values()
    implementation ktorSerialization
    implementation lifecycle.values()
    implementation coil
    implementation hilt.values()
    implementation room.values()
    implementation calendarView

    kapt hiltKapt.values()
    kapt roomKapt.values()

    testImplementation mockK
    testImplementation coroutineTest
    testImplementation kotlinTest
    implementation fragmentTesting

    api project(':core_api')

}